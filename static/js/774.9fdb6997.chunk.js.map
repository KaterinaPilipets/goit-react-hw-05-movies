{"version":3,"file":"static/js/774.9fdb6997.chunk.js","mappings":"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","sources":["API/index.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/FormSearch/FormSearch.styled.js","components/FormSearch/FormSearch.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8c3b14bfd964334b0e677cd4ab73e9a9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport async function fetchTrending() {\n  const response = await axios('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMoviesByName(name) {\n  const response = await axios('/3/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: name,\n      page: 1,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieId(movieId) {\n  const response = await axios(`/3/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios(`/3/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios(`/3/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n// export const fetchMovie = (movieId, fetchMovieFunc) => {\n//   let movie = null;\n//   if (!movieId) {\n//     return;\n//   }\n//   const fetch = async () => {\n//     try {\n//       movie = await fetchMovieFunc(movieId);\n//     } catch (error) {\n//       alert(error);\n//       return;\n//     }\n//   };\n//   fetch();\n//   return movie;\n// };\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListMovie = styled.ul`\n  list-style: none;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n  text-decoration: underline;\n  &.active {\n    color: white;\n    background-color: teal;\n  }\n  &:hover {\n    color: teal;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link, ListMovie } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\nconst MoviesList = ({ list }) => {\n  const location = useLocation();\n  return (\n    <ListMovie>\n      {list.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ListMovie>\n  );\n};\nexport default MoviesList;\nMoviesList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from 'styled-components';\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SearchbarContainer = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: teal;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  font-size: 18px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  // text-transform: uppercase;\n  border-radius: 5px;\n  box-shadow: 1px 1px 1px 0.5px grey;\n  :hover {\n    color: #fff;\n    background-color: teal;\n  }\n\n  height: 48px;\n  border: 0;\n  background-color: gray;\n\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    // opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  Form,\n  SearchbarContainer,\n  SearchInput,\n  Button,\n} from './FormSearch.styled';\n// import { ImSearch } from 'react-icons/im';\nconst FormSearch = ({ onSubmit }) => {\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('query') ?? '';\n  const [value, setValue] = useState(search);\n  const onChange = e => {\n    setValue(e.currentTarget.value.trim());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    value ? onSubmit(value) : console.log('Enter data in the search field!');\n  };\n\n  return (\n    <SearchbarContainer>\n      <Form onSubmit={handleSubmit}>\n        <SearchInput\n          onChange={onChange}\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </SearchbarContainer>\n  );\n};\nexport default FormSearch;\n\nFormSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { fetchMoviesByName } from 'API';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport FormSearch from 'components/FormSearch/FormSearch';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nconst Movies = () => {\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const curentMovie = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (!curentMovie) {\n      return;\n    }\n    const fetch = async () => {\n      try {\n        const movies = await fetchMoviesByName(curentMovie);\n        setFoundMovies(movies.results);\n        if (!movies.results.length) {\n          alert('Please write correct movie');\n        }\n      } catch (error) {\n        alert(error);\n        return;\n      }\n    };\n\n    fetch();\n  }, [curentMovie]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <FormSearch onSubmit={handleSubmit} />\n      {foundMovies && <MoviesList list={foundMovies} />}\n    </>\n  );\n};\nexport default Movies;\n// {\n//   /* <Outlet /> */\n// }\n"],"names":["API_KEY","fetchTrending","axios","params","api_key","response","data","fetchMoviesByName","name","query","page","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","ListMovie","styled","Link","NavLink","list","location","useLocation","map","id","title","to","state","from","Form","SearchbarContainer","SearchInput","Button","onSubmit","useSearchParams","search","get","useState","value","setValue","e","preventDefault","console","log","onChange","currentTarget","trim","type","autocomplete","autoFocus","placeholder","foundMovies","setFoundMovies","searchParams","setSearchParams","curentMovie","useEffect","fetch","movies","results","length","alert","MoviesList"],"sourceRoot":""}