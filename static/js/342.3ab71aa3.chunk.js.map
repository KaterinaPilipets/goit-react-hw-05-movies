{"version":3,"file":"static/js/342.3ab71aa3.chunk.js","mappings":"+SAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,wBAAyB,CACpDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBN,EAAAA,EAAAA,GAAM,kBAAmB,CAC9CC,OAAQ,CACNC,QAASJ,EACTS,MAAOD,EACPE,KAAM,KALL,cACCL,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,GAAW,CAClDT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,EAAb,YAAgC,CAC1DT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeQ,EAAtB,kC,aAAO,O,oBAAA,WAAiCF,GAAjC,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,EAAb,YAAgC,CAC1DT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEAzCPJ,EAAAA,EAAAA,SAAAA,QAAyB,6B,+LCAZa,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iUAgBVE,EAAYF,EAAAA,GAAAA,IAAH,wDAITG,EAAgBH,EAAAA,GAAAA,IAAH,wDAWbI,EAAOJ,EAAAA,GAAAA,KAAH,sFAKJK,EAASL,EAAAA,GAAAA,GAAH,gG,gKCcnB,EAlDkB,SAAC,GAAe,IAAD,IAAZM,EAAY,EAAZA,MAEbC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAE9CC,EAOEP,EAPFO,YACAC,EAMER,EANFQ,MACAC,EAKET,EALFS,eACAC,EAIEV,EAJFU,aACAC,EAGEX,EAHFW,aACAC,EAEEZ,EAFFY,SACAC,EACEb,EADFa,OAGF,OACE,iCACE,SAAC,KAAD,CAAYC,GAAIX,EAASY,QAASV,MAAO,CAAEC,KAAML,GAAjD,sBAGA,UAAC,KAAD,YACE,gBACEe,IAAKT,GAAW,UApBD,mCAoBC,OAAwBA,GACxCU,IAAKT,KAGP,4BACE,0BACGA,GAASC,EAAgB,KAC1B,SAAC,KAAD,4BAAWC,QAAX,IAAWA,OAAX,EAAWA,EAAcQ,MAAM,EAAG,GAAlC,UAHJ,gBAKc,4BAAOC,KAAKC,MAAqB,GAAfT,GAAlB,QACZ,oCACA,uBAAIE,GAAUA,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMpC,IAAV,IAAgBqC,KAAK,UACnD,sCACA,uBAAIX,WAGR,4BACE,oDACA,UAAC,KAAD,YACE,SAAC,KAAD,CAASE,GAAG,OAAZ,mBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,yBAEF,SAAC,EAAAU,SAAD,WACE,SAAC,KAAD,WAKT,ECzBD,EAtBqB,WACnB,IAAQlC,GAAYmC,EAAAA,EAAAA,MAAZnC,QACR,GAAsCoC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAkBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAKvC,EAAL,CAGA,IAAMwC,EAAK,mCAAG,8GAEUzC,EAAAA,EAAAA,IAAaC,GAFvB,OAEJU,EAFI,OAGV4B,EAAe5B,GAHL,uDAKV+B,MAAM,EAAD,IALK,4EAAH,qDAUXD,GAXC,CAYF,GAAE,CAACxC,KAEG,8BAAGqC,IAAe,SAAC,EAAD,CAAW3B,MAAO2B,KAC5C,C","sources":["API/index.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8c3b14bfd964334b0e677cd4ab73e9a9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport async function fetchTrending() {\n  const response = await axios('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMoviesByName(name) {\n  const response = await axios('/3/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: name,\n      page: 1,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieId(movieId) {\n  const response = await axios(`/3/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios(`/3/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios(`/3/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n// export const fetchMovie = (movieId, fetchMovieFunc) => {\n//   let movie = null;\n//   if (!movieId) {\n//     return;\n//   }\n//   const fetch = async () => {\n//     try {\n//       movie = await fetchMovieFunc(movieId);\n//     } catch (error) {\n//       alert(error);\n//       return;\n//     }\n//   };\n//   fetch();\n//   return movie;\n// };\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 8px;\n  margin-bottom: 16px;\n  color: gray;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  border-radius: 5px;\n  box-shadow: 1px 1px 1px 0.5px grey;\n  :hover {\n    color: teal;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n  gap: 20px;\n`;\nexport const ContainerLink = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\n// export const Info = styled.div`\n//   display: flex;\n//   align-items: baseline;\n//   gap: 8px;\n// `;\n\nexport const Year = styled.span`\n  color: teal;\n  //   font-size: 18px;\n  font-weight: 600;\n`;\nexport const Galery = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n","import { Suspense, useRef } from 'react';\nimport { useLocation, NavLink, Outlet } from 'react-router-dom';\nimport { StyledLink, Year, Container, ContainerLink } from './MovieInfo.styled';\nconst MovieInfo = ({ movie }) => {\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  const {\n    poster_path,\n    title,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n\n  return (\n    <>\n      <StyledLink to={backLink.current} state={{ from: location }}>\n        Go back\n      </StyledLink>\n      <Container>\n        <img\n          src={poster_path && `${IMAGE_BASE_URL}${poster_path}`}\n          alt={title}\n        />\n\n        <div>\n          <h2>\n            {title || original_title}{' '}\n            <Year>{`(${release_date?.slice(0, 4)})`}</Year>\n          </h2>\n          User score: <span>{Math.round(vote_average * 10)}%</span>\n          <h3>Genres</h3>\n          <p>{genres && genres.map(genre => genre.name).join(' | ')}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n        </div>\n      </Container>\n      <div>\n        <h3>Additional information</h3>\n        <ContainerLink>\n          <NavLink to=\"cast\">Cast</NavLink>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </ContainerLink>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\nexport default MovieInfo;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieId } from 'API';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [curentMovie, setCurentMovie] = useState(null);\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetch = async () => {\n      try {\n        const movie = await fetchMovieId(movieId);\n        setCurentMovie(movie);\n      } catch (error) {\n        alert(error);\n        return;\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  return <>{curentMovie && <MovieInfo movie={curentMovie} />}</>;\n};\nexport default MovieDetails;\n"],"names":["API_KEY","fetchTrending","axios","params","api_key","response","data","fetchMoviesByName","name","query","page","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","StyledLink","styled","Link","Container","ContainerLink","Year","Galery","movie","location","useLocation","backLink","useRef","state","from","poster_path","title","original_title","release_date","vote_average","overview","genres","to","current","src","alt","slice","Math","round","map","genre","join","Suspense","useParams","useState","curentMovie","setCurentMovie","useEffect","fetch","alert"],"sourceRoot":""}