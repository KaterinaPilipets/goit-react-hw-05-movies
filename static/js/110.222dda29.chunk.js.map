{"version":3,"file":"static/js/110.222dda29.chunk.js","mappings":"+SAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,wBAAyB,CACpDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBN,EAAAA,EAAAA,GAAM,kBAAmB,CAC9CC,OAAQ,CACNC,QAASJ,EACTS,MAAOD,EACPE,KAAM,KALL,cACCL,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,GAAW,CAClDT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,EAAb,YAAgC,CAC1DT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeQ,EAAtB,kC,aAAO,O,oBAAA,WAAiCF,GAAjC,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,EAAb,YAAgC,CAC1DT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEAzCPJ,EAAAA,EAAAA,SAAAA,QAAyB,6B,kHC+CzB,UA7Ca,WACX,IACQU,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAAsCI,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAkBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAGA,IAAMQ,EAAK,mCAAG,8GAEUP,EAAAA,EAAAA,IAAkBD,GAF5B,OAEJS,EAFI,OAGVH,EAAeG,EAAMC,MAHX,uDAKVC,MAAM,EAAD,IALK,4EAAH,qDAUXH,GAXC,CAYF,GAAE,CAACR,IAECK,EAIsB,IAAvBA,EAAYO,QACP,yEAIP,0BACE,SAAC,KAAD,iBACGP,QADH,IACGA,OADH,EACGA,EAAaQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcnB,EAArB,EAAqBA,KAAMoB,EAA3B,EAA2BA,UAA3B,OAChB,UAAC,EAAAC,GAAD,WACGF,IACC,gBAAKG,IAAG,UAlCG,mCAkCH,OAAsBH,GAAgBI,IAAKvB,KAErD,uBAAIA,KACJ,uBAAIoB,MALGF,EADO,QAVf,IAsBV,C,yNC9CYM,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iUAgBVE,EAAYF,EAAAA,GAAAA,IAAH,wDAITG,EAAgBH,EAAAA,GAAAA,IAAH,wDAKbJ,EAAKI,EAAAA,GAAAA,GAAH,yCAIFI,EAAOJ,EAAAA,GAAAA,KAAH,sFAKJK,EAASL,EAAAA,GAAAA,GAAH,gG","sources":["API/index.js","components/MovieInfo/Cast.js","components/MovieInfo/MovieInfo.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8c3b14bfd964334b0e677cd4ab73e9a9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport async function fetchTrending() {\n  const response = await axios('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMoviesByName(name) {\n  const response = await axios('/3/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: name,\n      page: 1,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieId(movieId) {\n  const response = await axios(`/3/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios(`/3/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios(`/3/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n// export const fetchMovie = (movieId, fetchMovieFunc) => {\n//   let movie = null;\n//   if (!movieId) {\n//     return;\n//   }\n//   const fetch = async () => {\n//     try {\n//       movie = await fetchMovieFunc(movieId);\n//     } catch (error) {\n//       alert(error);\n//       return;\n//     }\n//   };\n//   fetch();\n//   return movie;\n// };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'API';\nimport { Galery, Li } from './MovieInfo.styled';\n\nconst Cast = () => {\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n  const { movieId } = useParams();\n  const [curentMovie, setCurentMovie] = useState(null);\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetch = async () => {\n      try {\n        const movie = await fetchMovieCredits(movieId);\n        setCurentMovie(movie.cast);\n      } catch (error) {\n        alert(error);\n        return;\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n\n  if (!curentMovie) {\n    return null;\n  }\n\n  if (curentMovie.length === 0) {\n    return <p>Sorry we don't have any cast for this movie!</p>;\n  }\n\n  return (\n    <div>\n      <Galery>\n        {curentMovie?.map(({ id, profile_path, name, character }) => (\n          <Li key={id}>\n            {profile_path && (\n              <img src={`${IMAGE_BASE_URL}${profile_path}`} alt={name} />\n            )}\n            <p>{name}</p>\n            <p>{character}</p>\n          </Li>\n        ))}\n      </Galery>\n    </div>\n  );\n};\nexport default Cast;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 8px;\n  margin-bottom: 16px;\n  color: gray;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  border-radius: 5px;\n  box-shadow: 1px 1px 1px 0.5px grey;\n  :hover {\n    color: teal;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n  gap: 20px;\n`;\nexport const ContainerLink = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Li = styled.li`\n  width: 200px;\n`;\n\nexport const Year = styled.span`\n  color: teal;\n  //   font-size: 18px;\n  font-weight: 600;\n`;\nexport const Galery = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n"],"names":["API_KEY","fetchTrending","axios","params","api_key","response","data","fetchMoviesByName","name","query","page","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","useParams","useState","curentMovie","setCurentMovie","useEffect","fetch","movie","cast","alert","length","map","id","profile_path","character","Li","src","alt","StyledLink","styled","Link","Container","ContainerLink","Year","Galery"],"sourceRoot":""}